# Experiment Definitions
#
# In the "experiments" dict, you can define one entry per named experiment you
# want to run. That experiment entry should have "control", "vary", and
# "constrain" sections.
#
# In the "control" section, list each variable that is held constant for the
# experiment, and the value it should have.
#
# In the "vary" section, list each variable you want to change between
# conditions, and all of its possible values. All combinations of the values
# will be considered.
#
# The "constrain" section is used because all possible combinations of variable
# values from the "vary" section might not make sense. If the section is
# present, it is a list of "constraint pass" lists of objects where the keys
# are variable names and the values are variable values. If a value is itself a
# list, all values in the list are allowed. Only experimental conditions that
# match at least one entry in each constraint pass, on all of the entry's
# variables, will actually be run.
#
# So, if you want to only use read trimming with R10 nanopore reads, and you
# want to use un-trimmed HiFi reads, you could write a constrain section like:
# 
# constrain:
#   - 
#     - tech: r10
#       trimmedness: ".trimmed"
#     - tech: hifi
#       trimmedness: ""
#
# Note the extra "-" and level of indentation; there is one pass of
# constraining here, but there could be more.
#
# The possible variables and their accepted values are:
#
# realness: Controls if the reads are real reads or simulated reads. Can be
# "real" or "sim".
#
# tech: The sequencing technology. With the data set we use, can be "r10",
# "hifi", or "illumina".
#
# sample: The name of the sample to use reads from. Determines which read files
# are used. With the data set we use, can be "HG002".
#
# trimmedness: Can be ".trimmed" (with leading ".") or "" (empty string).
# Determines if the first 100 and last 10 bases of the reads should be dropped
# (to remove nanopore adapter sequences).
#
# subset: Can be "1k", "10k", "100k", or "1m". Controls the number of reads to
# run.
#
# reference: The name of the linear reference assembly to use. Right now we
# only use "chm13".
#
# refgraph: The graph to use. "primary" or "hprc-v1.1-mc"
#
# The hprc graphs can have additional modifications added, separated by "-"
# -d9 for frequency filtered
# -sampled[] for haplotype sampling
# -unchopped for the graph with unchopped nodes. This comes last in the order
#
# mapper: the read mapper to run. Can be "minimap2" or "winnowmap". Can also be
# "giraffe-" and then a minimizer configuration like "k31.w50.W" or "k29.w11",
# and then a dash and a Giraffe preset like "-hifi", and then "-default" or a Git
# commit, and then "-noflags" or a string understandable to get_vg_flags() in the
# Snakefile that determines a set of command line flags to pass.
#
# The number after "k" is the minimizer length, the number after "w" is the
# number of windows to choose minimizers from, and the ".W" is there if
# high-frequency k-mers should be down-weighted to make them less likely to be
# minimizers.
#
# The preset is one of Giraffe's available mapping parameter preset names.
#
# category: Optional variable. Can be "", "centromeric", or "not_centromeric".
#
# ALL of these variables (except the optional ones) need to be covered in each
# experiment, in either the "control" section (to hold them constant) or the
# "vary" section (to run them through a list of values).

#graphs_dir: "/private/groups/patenlab/xhchang/graphs/lr_giraffe_graphs"
#reads_dir: "/private/groups/patenlab/xhchang/reads"
#all_out_dir: "outputs"
real_slurm_extra: "--exclude=phoenix-[00-10,22-24]"
exclusive_timing: false

real_exps: ["hifi_real_full", "r10_real_full"]
sim_exps: ["hifi_sim_1m", "r10_sim_1m"]
headline_sim_exps: ["r10_sim_1m_headline", "hifi_sim_1m_headline"]
headline_real_exps: ["hifi_real_full_headline", "r10_real_full_headline"]
dv_exps: ["dv_calling"]
sv_exps: ["sv_calling"]

non_zipcode_giraffe_versions: ["230872", "v1.62.0"]

experiments:

  #This is used to test different mappers on r10 reads
  #Add different vg versions with `-commit` instead of `-default`, and make sure the binary
  # is called `vg_commit`
  r10_real_full:
    control:
      subset: full
      reference: chm13
      tech: r10
      trimmedness: ".trimmed"
      sample: HG002
      realness: real
    vary:
      mapper: ["minimap2-map-ont", "minimap2-lr:hqae", "winnowmap", "graphaligner-default", "graphaligner-fast", "minigraph", "giraffe-k31.w50.W-r10-839e93-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-d9-unchopped", "hprc-v1.1-mc-unchopped", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16", "hprc-v1.0-minigraph", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-lr:hqae", "winnowmap", "graphaligner-default", "giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: ["hprc-v1.1-mc", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
          mapper: ["giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: "hprc-v1.1-mc-d9-unchopped"
          mapper: ["graphaligner-default", "graphaligner-fast"]
        - refgraph: ["hprc-v1.1-mc-unchopped"]
          mapper: ["graphaligner-default", "graphaligner-fast"]
        - refgraph: "primary"
          mapper: ["giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: "hprc-v1.0-minigraph"
          mapper: ["minigraph", "graphaligner-default"]

  #This is used to test different mappers on hifi reads
  #Add vg versions with `-commit` instead of `-default`, and make sure the binary
  # is called `vg_commit`
  hifi_real_full:
    control:
      subset: full
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
    vary:
      mapper: ["minimap2-map-pb", "minimap2-map-hifi", "minimap2-lr:hqae", "winnowmap", "graphaligner-default", "graphaligner-fast", "minigraph", "giraffe-k31.w50.W-hifi-839e93-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-d9-unchopped", "hprc-v1.1-mc-unchopped", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16", "hprc-v1.0-minigraph", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-map-hifi", "winnowmap", "graphaligner-default", "graphaligner-fast", "giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: ["hprc-v1.1-mc", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
          mapper: ["giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: "hprc-v1.1-mc-d9-unchopped"
          mapper: ["graphaligner-default", "graphaligner-fast"]
        - refgraph: ["hprc-v1.1-mc-unchopped"]
          mapper: ["graphaligner-default", "graphaligner-fast"]
        - refgraph: "primary"
          mapper: ["giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: "hprc-v1.0-minigraph"
          mapper: ["minigraph", "graphaligner-default"]

  illumina_real_full:
    control:
      subset: full
      reference: chm13
      tech: illumina
      trimmedness: ""
      sample: HG002
      realness: real
    vary:
      mapper: ["minimap2-sr", "bwa", "giraffe-k29.w11-default-030329-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-sr", "bwa", "giraffe-k29.w11-default-030329-noflags"]
        - refgraph: ["hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
          mapper: []
        - refgraph: "primary"
          mapper: ["giraffe-k29.w11-default-030329-noflags"]

  r10_real_full_headline:
    control:
      subset: full
      reference: chm13
      tech: r10
      trimmedness: ".trimmed"
      sample: HG002
      realness: real
    vary:
      mapper: ["minimap2-map-ont", "minimap2-lr:hqae", "winnowmap", "graphaligner-default", "graphaligner-fast", "minigraph", "giraffe-k31.w50.W-r10-839e93-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-d9-unchopped", "hprc-v1.1-mc-unchopped", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16", "hprc-v1.0-minigraph", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-lr:hqae", "winnowmap", "graphaligner-default", "giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: ["hprc-v1.1-mc"]
          mapper: ["giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: ["hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
          mapper: []
        - refgraph: "hprc-v1.1-mc-d9-unchopped"
          mapper: ["graphaligner-default"]
        - refgraph: ["hprc-v1.1-mc-unchopped"]
          mapper: []
        - refgraph: "primary"
          mapper: ["giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: "hprc-v1.0-minigraph"
          mapper: ["minigraph", "graphaligner-default"]

  #This is used to test different mappers on hifi reads
  #Add vg versions with `-commit` instead of `-default`, and make sure the binary
  # is called `vg_commit`
  hifi_real_full_headline:
    control:
      subset: full
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
    vary:
      mapper: ["minimap2-map-pb", "minimap2-map-hifi", "minimap2-lr:hqae", "winnowmap", "graphaligner-default", "graphaligner-fast", "minigraph", "giraffe-k31.w50.W-hifi-839e93-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-d9-unchopped", "hprc-v1.1-mc-unchopped", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16", "hprc-v1.0-minigraph", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-map-hifi", "winnowmap", "graphaligner-default", "graphaligner-fast", "giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: ["hprc-v1.1-mc"]
          mapper: ["giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: ["hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
          mapper: []
        - refgraph: "hprc-v1.1-mc-d9-unchopped"
          mapper: ["graphaligner-default"]
        - refgraph: ["hprc-v1.1-mc-unchopped"]
          mapper: []
        - refgraph: "primary"
          mapper: ["giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: "hprc-v1.0-minigraph"
          mapper: ["minigraph", "graphaligner-default"]

  r10_sim_1m:
    control:
      subset: 1m
      reference: chm13
      tech: r10
      trimmedness: ""
      sample: HG002
      realness: sim
    vary:
      mapper: ["minimap2-map-ont", "minimap2-lr:hqae", "winnowmap", "graphaligner-default", "graphaligner-fast", "minigraph", "giraffe-k31.w50.W-r10-839e93-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-d9-unchopped", "hprc-v1.1-mc-unchopped", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16", "hprc-v1.0-minigraph", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-lr:hqae", "winnowmap", "graphaligner-default", "giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: ["hprc-v1.1-mc", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
          mapper: ["giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: "hprc-v1.1-mc-d9-unchopped"
          mapper: ["graphaligner-default", "graphaligner-fast"]
        - refgraph: ["hprc-v1.1-mc-unchopped"]
          mapper: ["graphaligner-default", "graphaligner-fast"]
        - refgraph: "primary"
          mapper: ["giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: "hprc-v1.0-minigraph"
          mapper: ["minigraph", "graphaligner-default"]

  hifi_sim_1m:
    control:
      subset: 1m
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
    vary:
      mapper: ["minimap2-map-pb", "minimap2-map-hifi", "minimap2-lr:hqae", "winnowmap", "graphaligner-default", "graphaligner-fast", "minigraph", "giraffe-k31.w50.W-hifi-839e93-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-d9-unchopped", "hprc-v1.1-mc-unchopped", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16", "hprc-v1.0-minigraph", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-map-hifi", "winnowmap", "graphaligner-default", "giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: ["hprc-v1.1-mc", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
          mapper: ["giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: "hprc-v1.1-mc-d9-unchopped"
          mapper: ["graphaligner-default", "graphaligner-fast"]
        - refgraph: ["hprc-v1.1-mc-unchopped"]
          mapper: ["graphaligner-default", "graphaligner-fast"]
        - refgraph: "primary"
          mapper: ["giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: "hprc-v1.0-minigraph"
          mapper: ["minigraph", "graphaligner-default"]

  illumina_sim_1m_all:
    control:
      subset: 1m
      reference: chm13
      tech: illumina
      trimmedness: ""
      sample: HG002
      realness: sim
    vary:
      mapper: ["minimap2-sr", "bwa", "giraffe-k29.w11-default-030329-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-sr", "bwa", "giraffe-k29.w11-default-030329-noflags"]
        - refgraph: ["hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
          mapper: []
        - refgraph: "primary"
          mapper: ["giraffe-k29.w11-default-030329-noflags"]

  r10_sim_1m_headline:
    control:
      subset: 1m
      reference: chm13
      tech: r10
      trimmedness: ""
      sample: HG002
      realness: sim
    vary:
      mapper: ["minimap2-map-ont", "minimap2-lr:hqae", "winnowmap", "graphaligner-default", "graphaligner-fast", "minigraph", "giraffe-k31.w50.W-r10-e9fa19-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-d9-unchopped", "hprc-v1.1-mc-unchopped", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16", "hprc-v1.0-minigraph", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-lr:hqae", "winnowmap", "giraffe-k31.w50.W-r10-e9fa19-noflags"]
        - refgraph: ["hprc-v1.1-mc"]
          mapper: ["giraffe-k31.w50.W-r10-e9fa19-noflags"]
        #- refgraph: ["hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
        #  mapper: []
        - refgraph: "hprc-v1.1-mc-d9-unchopped"
          mapper: ["graphaligner-default"]
        - refgraph: ["hprc-v1.1-mc-unchopped"]
          mapper: []
        - refgraph: "primary"
          mapper: ["giraffe-k31.w50.W-r10-e9fa19-noflags"]
        - refgraph: "hprc-v1.0-minigraph"
          mapper: ["minigraph", "graphaligner-default"]
  hifi_sim_1m_headline:
    control:
      subset: 1m
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
    vary:
      mapper: ["minimap2-map-pb", "minimap2-map-hifi", "minimap2-lr:hqae", "winnowmap", "graphaligner-default", "graphaligner-fast", "minigraph", "giraffe-k31.w50.W-hifi-e9fa19-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-d9-unchopped", "hprc-v1.1-mc-unchopped", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16", "hprc-v1.0-minigraph", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-map-hifi", "winnowmap", "giraffe-k31.w50.W-hifi-e9fa19-noflags"]
        - refgraph: ["hprc-v1.1-mc"]
          mapper: ["giraffe-k31.w50.W-hifi-e9fa19-noflags"]
        #- refgraph: ["hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
        #  mapper: []
        - refgraph: "hprc-v1.1-mc-d9-unchopped"
          mapper: ["graphaligner-default"]
        - refgraph: ["hprc-v1.1-mc-unchopped"]
          mapper: []
        - refgraph: "primary"
          mapper: ["giraffe-k31.w50.W-hifi-e9fa19-noflags"]
        - refgraph: "hprc-v1.0-minigraph"
          mapper: ["minigraph", "graphaligner-default"]



  #For variant calling
  dv_calling:
    control:
      subset: full
      reference: chm13
      sample: HG002
      realness: real
    vary:
      tech: ["hifi", "r10"]
      mapper: ["minimap2-map-hifi", "minimap2-lr:hqae", "giraffe-k31.w50.W-hifi-839e93-noflags", "giraffe-k31.w50.W-r10-839e93-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
      trimmedness: [".trimmed", ""]
    constrain:
      - 
        # Always use the no trimming for real hifi reads
        - realness: real
          tech: hifi
          trimmedness: ""
        # Always use trimming for real R10 reads
        - realness: real
          tech: r10
          trimmedness: ".trimmed"
        # Always use no trimming for real Illumina reads
        - realness: real
          tech: illumina
          trimmedness: ""
        # Always use no trimming after simulation for simulated reads
        - realness: sim
          trimmedness: ""
      - 
        # Use the right mapping preset for each tech
        - tech: "hifi"
          mapper: ["minimap2-map-hifi", "giraffe-k31.w50.W-hifi-839e93-noflags"]
        - tech: "r10"
          mapper: ["minimap2-lr:hqae", "giraffe-k31.w50.W-r10-839e93-noflags"]
      - 
        # Don't use the linear mappers on all the graphs
        - mapper: ["giraffe-k31.w50.W-hifi-839e93-noflags", "giraffe-k31.w50.W-r10-839e93-noflags"]
          refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
        - mapper: ["minimap2-map-hifi", "minimap2-lr:hqae"]
          refgraph: ["hprc-v1.1-mc-d9"]



  #For sv calling
  sv_calling:
    control:
      subset: full
      sample: HG002
      realness: real
      truthset: giab6
    vary:
      reference: ["chm13", "grch38"]
      truthref: ["chm13", "grch38"]
      caller: ["vgcall", "sniffles"]
      tech: ["hifi", "r10"]
      mapper: ["minimap2-map-hifi", "minimap2-lr:hqae", "graphaligner-default", "giraffe-k31.w50.W-hifi-839e93-noflags", "giraffe-k31.w50.W-r10-839e93-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
      trimmedness: [".trimmed", ""]
    constrain:
      - 
        # Always use the no trimming for real hifi reads
        - realness: real
          tech: hifi
          trimmedness: ""
        # Always use trimming for real R10 reads
        - realness: real
          tech: r10
          trimmedness: ".trimmed"
        # Always use no trimming for real Illumina reads
        - realness: real
          tech: illumina
          trimmedness: ""
        # Always use no trimming after simulation for simulated reads
        - realness: sim
          trimmedness: ""
      - 
        # Use the right mapping preset for each tech
        - tech: "hifi"
          mapper: ["minimap2-map-hifi", "graphaligner-default", "giraffe-k31.w50.W-hifi-839e93-noflags"]
        - tech: "r10"
          mapper: ["minimap2-lr:hqae", "graphaligner-default", "giraffe-k31.w50.W-r10-839e93-noflags"]
      - 
        # Don't use the linear mappers on all the graphs
        - mapper: ["giraffe-k31.w50.W-hifi-839e93-noflags", "giraffe-k31.w50.W-r10-839e93-noflags"]
          refgraph: ["hprc-v1.1-mc", "hprc-v1.1-mc-sampled2d", "hprc-v1.1-mc-sampled16"]
        - mapper: ["graphaligner-default"]
          refgraph: ["hprc-v1.1-mc"]
        - mapper: ["minimap2-map-hifi", "minimap2-lr:hqae"]
          refgraph: ["hprc-v1.1-mc-d9"]
      - 
        #Use linear mappers with sniffles and graph mappers with vgcall
        - caller: ["vgcall"]
          mapper: ["graphaligner-default", "giraffe-k31.w50.W-hifi-839e93-noflags", "giraffe-k31.w50.W-r10-839e93-noflags"]
        - caller: ["sniffles"]
          mapper: ["minimap2-map-hifi", "minimap2-lr:hqae"]
      - 
        # Use the same mapping and calling reference for minimap, but vary the calling reference for graphs
        - caller: ["sniffles"]
          truthref: ["chm13"]
          reference: ["chm13"]
        - caller: ["sniffles"]
          truthref: ["grch38"]
          reference: ["grch38"]
        - caller: ["vgcall"]
          truthref: ["chm13", "grch38"]
          reference: ["chm13"]


  # This experiment tests all the mappers, realnesses, technologies, and
  # trimming levels on a small number of reads.
  tiny_test:
    control:
      subset: 1k
      reference: chm13
      refgraph: "hprc-v1.1-mc"
      sample: HG002
    vary:
      mapper: ["giraffe-k31.w50.W-r10-default-noflags", "giraffe-k31.w50.W-hifi-default-noflags", "giraffe-k29.w11.W-default-default-noflags", "giraffe-k29.w11.W-default-default-noflags", "minimap2-lr:hqae", "minimap2-sr", "winnowmap"]
      tech: ["r10", "hifi", "illumina"]
      trimmedness: ["", ".trimmed"]
      realness: ["sim", "real"]
    constrain:
      - 
        # Always use the no trimming for real hifi reads
        - realness: real
          tech: hifi
          trimmedness: ""
        # Always use trimming for real R10 reads
        - realness: real
          tech: r10
          trimmedness: ".trimmed"
        # Always use no trimming for real Illumina reads
        - realness: real
          tech: illumina
          trimmedness: ""
        # Always use no trimming after simulation for simulated reads
        - realness: sim
          trimmedness: ""
      -
        # Only run the short read modes of Giraffe on the short reads. And
        # don't run Winnowmap on short reads since it can't do them.
        - mapper: "giraffe-k31.w50.W-r10-default-noflags"
          tech: "r10"
        - mapper: "giraffe-k31.w50.W-hifi-default-noflags"
          tech: "hifi"
        - mapper: "winnowmap"
          tech: ["r10", "hifi"]
        - mapper: ["giraffe-k29.w11.W-default-default-noflags", "giraffe-k29.w11.W-default-default-noflags"]
          tech: "illumina"
        - mapper: "minimap2-lr:hqae"
          tech: ["r10", "hifi"]
        - mapper: "minimap2-sr"
          tech: "illumina"

  #This is used to test different mappers on r10 reads
  #Add different vg versions with `-commit` instead of `-default`, and make sure the binary
  # is called `vg_commit`
  r10_test_real:
    control:
      subset: 1m
      reference: chm13
      tech: r10
      trimmedness: ".trimmed"
      sample: HG002
      realness: real
    vary:
      mapper: ["minimap2-map-ont", "minimap2-lr:hqae", "winnowmap", "graphaligner-default", "minigraph", "giraffe-k31.w50.W-r10-839e93-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-d9-unchopped", "hprc-v1.1-mc-unchopped", "hprc-v1.0-minigraph", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-lr:hqae", "winnowmap", "graphaligner-default", "giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: "hprc-v1.1-mc"
          mapper: ["giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: "hprc-v1.1-mc-d9-unchopped"
          mapper: ["graphaligner-default"]
        - refgraph: "hprc-v1.1-mc-unchopped"
          mapper: ["graphaligner-default"]
        - refgraph: "primary"
          mapper: ["giraffe-k31.w50.W-r10-839e93-noflags"]
        - refgraph: "hprc-v1.0-minigraph"
          mapper: ["minigraph", "graphaligner-default"]

  #This is used to test different mappers on hifi reads
  #Add vg versions with `-commit` instead of `-default`, and make sure the binary
  # is called `vg_commit`
  hifi_test_real:
    control:
      subset: 1m
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
    vary:
      mapper: ["minimap2-map-pb", "minimap2-map-hifi", "minimap2-lr:hqae", "winnowmap", "graphaligner-default", "minigraph", "giraffe-k31.w50.W-hifi-839e93-noflags"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc", "hprc-v1.1-mc-d9-unchopped", "hprc-v1.1-mc-unchopped", "hprc-v1.0-minigraph", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc-d9"
          mapper: ["minimap2-map-hifi", "winnowmap", "graphaligner-default", "giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: "hprc-v1.1-mc"
          mapper: ["giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: "hprc-v1.1-mc-d9-unchopped"
          mapper: ["graphaligner-default"]
        - refgraph: "hprc-v1.1-mc-unchopped"
          mapper: ["graphaligner-default"]
        - refgraph: "primary"
          mapper: ["giraffe-k31.w50.W-hifi-839e93-noflags"]
        - refgraph: "hprc-v1.0-minigraph"
          mapper: ["minigraph", "graphaligner-default"]

  hifi_sim_graphs:
    control:
      subset: 10k
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
      mapper: "giraffe-k31.w50.W-hifi-default-noflags"
    vary:
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v2.prereease-mc-R2-d32", "hprc-v2.prereease-mc-R2-sampled16", "hprc-v2.prerelease.2-mc-eval-nov22-d39", "hprc-v2.prerelease.2-mc-eval-nov22-sampled16"]

  hifi_sim_graphs_small:
    control:
      subset: 10k
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
      mapper: "giraffe-k31.w50.W-hifi-default-noflags"
    vary:
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v2.prereease-mc-R2-d32", "hprc-v2.prerelease.2-mc-eval-nov22-d39"]

  hifi_real_graphs:
    control:
      subset: full
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
      mapper: "giraffe-k31.w50.W-hifi-default-noflags"
      # SV specific parameters with generic names
      caller: vgcall
      truthset: giab6_chm13
    vary:
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v2.prereease-mc-R2-d32", "hprc-v2.prereease-mc-R2-sampled16", "hprc-v2.prerelease.2-mc-eval-nov22-d39", "hprc-v2.prerelease.2-mc-eval-nov22-sampled16"]

  hifi_real_graphs_small:
    control:
      subset: 100k
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
      mapper: "giraffe-k31.w50.W-hifi-default-noflags"
    vary:
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v2.prerelease.2-mc-eval-nov22-masked38-masked19-d39", "hprc-v1.1-mc-sampled16", "hprc-v2.prerelease.2-mc-eval-nov22-masked38-masked19-sampled16"]

  hifi_real_samples:
    control:
      subset: full
      tech: hifi
      reference: chm13
      trimmedness: ""
      realness: real
      mapper: "giraffe-k31.w50.W-hifi-default-noflags"
      refgraph: "hprc-v2.prerelease.2-mc-eval-nov22-masked38-masked19-d39"
    vary:
      sample: ["HG001", "HG002"]

  illumina_real_samples_grch38:
    control:
      subset: full
      tech: illumina
      reference: grch38
      trimmedness: ""
      realness: real
      mapper: "giraffe-k29.w11.W-default-default-noflags"
      refgraph: "hprc-v2.prerelease.2-mc-eval-masked38-nov22-d39"
    vary:
      sample: ["HG001", "HG002"]

  r10_sim_graphs:
    control:
      subset: 10k
      tech: r10
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
      mapper: "giraffe-k31.w50.W-r10-default-noflags"
    vary:
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v2.prereease-mc-R2-d32", "hprc-v2.prereease-mc-R2-sampled16", "hprc-v2.prerelease.2-mc-eval-nov22-d39", "hprc-v2.prerelease.2-mc-eval-nov22-sampled16"]

  r10_real_graphs:
    control:
      subset: full
      tech: r10
      reference: chm13
      trimmedness: ".trimmed"
      sample: HG002
      realness: real
      mapper: "giraffe-k31.w50.W-r10-default-noflags"
      # SV specific parameters with generic names
      caller: vgcall
      truthset: giab6_chm13
    vary:
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v2.prereease-mc-R2-d32", "hprc-v2.prereease-mc-R2-sampled16", "hprc-v2.prerelease.2-mc-eval-nov22-d39", "hprc-v2.prerelease.2-mc-eval-nov22-sampled16"]

  r10_real_graphs_small:
    control:
      subset: 100k
      tech: r10
      reference: chm13
      trimmedness: ".trimmed"
      sample: HG002
      realness: real
      mapper: "giraffe-k31.w50.W-r10-default-noflags"
    vary:
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v2.prerelease.2-mc-eval-nov22-masked38-masked19-d39", "hprc-v1.1-mc-sampled16", "hprc-v2.prerelease.2-mc-eval-nov22-masked38-masked19-sampled16"]

  illumina_sim_graphs:
    control:
      subset: 10k
      tech: illumina
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
    vary:
      mapper: ["giraffe-k29.w11.W-default-default-noflags", "bwa-pe"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v2.prerelease.2-mc-eval-nov22-d39"]
    constrain:
      -
        mapper: "giraffe-k29.w11.W-default-default-noflags"
      - 
        mapper: "bwa-pe"
        refgraph: "hprc-v1.1-mc-d9"

  illumina_real_graphs:
    control:
      subset: full
      tech: illumina
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
      # SV specific parameters with generic names
      caller: vgcall
      truthset: giab6_chm13
    vary:
      mapper: ["giraffe-k29.w11.W-default-default-noflags", "bwa-pe"]
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v2.prerelease.2-mc-eval-nov22-d39"]
    constrain:
      -
        mapper: "giraffe-k29.w11.W-default-default-noflags"
      - 
        mapper: "bwa-pe"
        refgraph: "hprc-v1.1-mc-d9"

  illumina_real_vgversion:
    control:
      subset: full
      tech: illumina
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
      refgraph: "hprc-v2.prerelease.2-mc-eval-nov22-d39"
      # SV specific parameters with generic names
      caller: vgcall
      truthset: giab6_chm13
    vary:
      mapper: ["giraffe-k29.w11.W-default-default-noflags", "giraffe-k29.w11.W-default-230872-noflags"]

  illumina_sim_samplingparams:
    control:
      subset: 10k
      tech: illumina
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
      mapper: "giraffe-k29.w11.W-default-default-noflags"
    vary:
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc-sampled16", "hprc-v1.1-mc-sampled16_jean20241203", "hprc-v2.prereease-mc-R2-d32", "hprc-v2.prereease-mc-R2-sampled16", "hprc-v2.prereease-mc-R2-sampled16_jean20241203"]

  hifi_sim_samplingparams:
    control:
      subset: 10k
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
      mapper: "giraffe-k31.w50.W-hifi-default-noflags"
    vary:
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc-sampled16", "hprc-v1.1-mc-sampled16_jean20241203", "hprc-v2.prereease-mc-R2-d32", "hprc-v2.prereease-mc-R2-sampled16", "hprc-v2.prereease-mc-R2-sampled16_jean20241203"]

  r10_sim_samplingparams:
    control:
      subset: 10k
      tech: r10
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
      mapper: "giraffe-k31.w50.W-r10-default-noflags"
    vary:
      refgraph: ["hprc-v1.1-mc-d9", "hprc-v1.1-mc-sampled16", "hprc-v1.1-mc-sampled16_jean20241203", "hprc-v2.prereease-mc-R2-d32", "hprc-v2.prereease-mc-R2-sampled16", "hprc-v2.prereease-mc-R2-sampled16_jean20241203"]

  illumina_real_samplingparams:
    control:
      subset: full
      tech: illumina
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
      mapper: "giraffe-k29.w11.W-default-default-noflags"
      # SV specific parameters with generic names
      caller: vgcall
      truthset: giab6_chm13
    vary:
      refgraph: ["hprc-v2.prereease-mc-R2-sampled16", "hprc-v2.prereease-mc-R2-sampled16_jean20241203"]

  hifi_real_samplingparams:
    control:
      subset: full
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
      mapper: "giraffe-k31.w50.W-hifi-default-noflags"
      # SV specific parameters with generic names
      caller: vgcall
      truthset: giab6_chm13
    vary:
      refgraph: ["hprc-v2.prereease-mc-R2-sampled16", "hprc-v2.prereease-mc-R2-sampled16_jean20241203"]

  r10_real_samplingparams:
    control:
      subset: full
      tech: r10
      reference: chm13
      trimmedness: ".trimmed"
      sample: HG002
      realness: real
      mapper: "giraffe-k31.w50.W-r10-default-noflags"
      # SV specific parameters with generic names
      caller: vgcall
      truthset: giab6_chm13
    vary:
      refgraph: ["hprc-v2.prereease-mc-R2-sampled16", "hprc-v2.prereease-mc-R2-sampled16_jean20241203"]

  hifi_speed:
    control:
      subset: 10k
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
      refgraph: hprc-v1.1-mc
    vary:
      mapper: ["giraffe-k31.w50.W-hifi-default-noflags", "giraffe-k31.w50.W-hifi-370f8f-noflags"]

  hifi_big_table:
    control:
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      refgraph: hprc-v1.1-mc
    vary:
      mapper:
        - giraffe-k31.w50.W-hifi-default-noflags
        # - graphaligner
        - minimap2-lr:hq
      subset: ["full", "1m"]
      realness: ["real", "sim"]
    constrain:
      - realness: real
        subset: full
      - realness: sim
        subset: 1m



  # Compare different nanopore data types
  compare_nanopore:
    control:
      subset: 1m
      reference: chm13
      refgraph: "hprc-v1.1-mc"
      sample: HG002
    vary:
      realness: ["sim", "real"]
      trimmedness: ["", ".trimmed"]
      tech: ["r10", "r9"]
      mapper: ["minimap2-lr:hqae", "giraffe-k31.w50.W-r10-default-noflags"]
    constrain:
        # Always trimming for real reads
        - realness: real
          trimmedness: ".trimmed"
        # Always use no trimming after simulation for simulated reads
        - realness: sim
          trimmedness: ""

  # This experiment compares different ways of mapping Illumina reads
  illumina_test:
    control:
      subset: 1m
      reference: chm13
      refgraph: "hprc-v1.1-mc"
      tech: illumina
      trimmedness: ""
      sample: HG002
    vary:
      realness: ["sim", "real"]
      mapper: ["giraffe-k29.w11.W-default-default-noflags", "giraffe-k29.w11.W-default-default-noflags", "giraffe-k29.w11-default-default-noflags", "giraffe-k29.w11-default-default-noflags"]
      refgraph: ["hprc-v1.1-mc", "hprc-v1.1-mc-sampled-HG002-illumina", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc"
          mapper: ["giraffe-k29.w11.W-default-default-noflags", "giraffe-k29.w11.W-default-default-noflags"]
        - refgraph: "hprc-v1.1-mc-sampled-HG002-illumina"
          mapper: ["giraffe-k29.w11-default-default-noflags", "giraffe-k29.w11-default-default-noflags"]
        - refgraph: "primary"          
          mapper: ["giraffe-k29.w11.W-default-default-noflags", "giraffe-k29.w11.W-default-default-noflags"]
  illumina_test_small:
    control:
      realness: sim
      subset: 1k
      reference: chm13
      refgraph: "hprc-v1.1-mc"
      tech: illumina
      trimmedness: ""
      sample: HG002
    vary:
      mapper: ["giraffe-k29.w11.W-default-default-noflags", "giraffe-k29.w11.W-default-default-noflags", "minimap2"]
