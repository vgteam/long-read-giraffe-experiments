# Experiment Definitions
#
# In the "experiments" dict, you can define one entry per named experiment you
# want to run. That experiment entry should have "control", "vary", and
# "constrain" sections.
#
# In the "control" section, list each variable that is held constant for the
# experiment, and the value it should have.
#
# In the "vary" section, list each variable you want to change between
# conditions, and all of its possible values. All combinations of the values
# will be considered.
#
# The "constrain" section is used because all possible combinations of variable
# values from the "vary" section might not make sense. If the section is
# present, it is a list of "constraint pass" lists of objects where the keys
# are variable names and the values are variable values. If a value is itself a
# list, all values in the list are allowed. Only experimental conditions that
# match at least one entry in each constraint pass, on all of the entry's
# variables, will actually be run.
#
# So, if you want to only use read trimming with R10 nanopore reads, and you
# want to use un-trimmed HiFi reads, you could write a constrain section like:
# 
# constrain:
#   - 
#     - tech: r10
#       trimmedness: ".trimmed"
#     - tech: hifi
#       trimmedness: ""
#
# Note the extra "-" and level of indentation; there is one pass of
# constraining here, but there could be more.
#
# The possible variables and their accepted values are:
#
# realness: Controls if the reads are real reads or simulated reads. Can be
# "real" or "sim".
#
# tech: The sequencing technology. With the data set we use, can be "r10",
# "hifi", or "illumina".
#
# sample: The name of the sample to use reads from. Determines which read files
# are used. With the data set we use, can be "HG002".
#
# trimmedness: Can be ".trimmed" (with leading ".") or "" (empty string).
# Determines if the first 100 and last 10 bases of the reads should be dropped
# (to remove nanopore adapter sequences).
#
# subset: Can be "1k", "10k", "100k", or "1m". Controls the number of reads to
# run.
#
# reference: The name of the linear reference assembly to use. Right now we
# only use "chm13".
#
# refgraph: The graph to use. "primary" or "hprc-v1.1-mc"
#
# mapper: the read mapper to run. Can be "minimap2" or "winnowmap". Can also be
# "giraffe-" and then a minimizer configuration like "k31.w50.W" or "k29.w11",
# and then a dash and a Giraffe preset like "-hifi", and then "-default" or a Git
# commit, and then "-noflags" or a string understandable to get_vg_flags() in the
# Snakefile that determines a set of command line flags to pass.
#
# The number after "k" is the minimizer length, the number after "w" is the
# number of windows to choose minimizers from, and the ".W" is there if
# high-frequency k-mers should be down-weighted to make them less likely to be
# minimizers.
#
# The preset is one of Giraffe's available mapping parameter preset names.
#
# category: Optional variable. Can be "", "centromeric", or "not_centromeric".
#
# ALL of these variables (except the optional ones) need to be covered in each
# experiment, in either the "control" section (to hold them constant) or the
# "vary" section (to run them through a list of values).

#graphs_dir: "/private/groups/patenlab/xhchang/graphs/lr_giraffe_graphs"
real_slurm_extra: "--exclude=phoenix-[00-10,22-24]"
exclusive_timing: true

experiments:
  # This experiment tests all the mappers, realnesses, technologies, and
  # trimming levels on a small number of reads.
  tiny_test:
    control:
      subset: 1k
      reference: chm13
      refgraph: "hprc-v1.1-mc"
      sample: HG002
    vary:
      mapper: ["giraffe-k31.w50.W-r10-default-noflags", "giraffe-k31.w50.W-hifi-default-noflags", "giraffe-k29.w11.W-sr-default-noflags", "giraffe-k29.w11.W-default-default-noflags", "minimap2-lr:hqae", "minimap2-sr", "winnowmap"]
      tech: ["r10", "hifi", "illumina"]
      trimmedness: ["", ".trimmed"]
      realness: ["sim", "real"]
    constrain:
      - 
        # Always use the no trimming for real hifi reads
        - realness: real
          tech: hifi
          trimmedness: ""
        # Always use trimming for real R10 reads
        - realness: real
          tech: r10
          trimmedness: ".trimmed"
        # Always use no trimming for real Illumina reads
        - realness: real
          tech: illumina
          trimmedness: ""
        # Always use no trimming after simulation for simulated reads
        - realness: sim
          trimmedness: ""
      -
        # Only run the short read modes of Giraffe on the short reads. And
        # don't run Winnowmap on short reads since it can't do them.
        - mapper: "giraffe-k31.w50.W-r10-default-noflags"
          tech: "r10"
        - mapper: "giraffe-k31.w50.W-hifi-default-noflags"
          tech: "hifi"
        - mapper: "winnowmap"
          tech: ["r10", "hifi"]
        - mapper: ["giraffe-k29.w11.W-sr-default-noflags", "giraffe-k29.w11.W-default-default-noflags"]
          tech: "illumina"
        - mapper: "minimap2-lr:hqae"
          tech: ["r10", "hifi"]
        - mapper: "minimap2-sr"
          tech: "illumina"

  #This is used to test different mappers on r10 reads
  #Add different vg versions with `-commit` instead of `-default`, and make sure the binary
  # is called `vg_commit`
  r10_test:
    control:
      subset: 1m
      reference: chm13
      refgraph: "hprc-v1.1-mc"
      tech: r10
      trimmedness: ""
      sample: HG002
    vary:
      realness: ["sim", "real"]
      mapper: ["minimap2-map-ont", "minimap2-lr:hqae", "winnowmap", "graphaligner", "giraffe-k31.w50.W-r10-default-noflags", "giraffe-k31.w50-r10-default-noflags"]
      refgraph: ["hprc-v1.1-mc", "hprc-v1.1-mc-sampled-HG002-r10", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc"
          mapper: ["minimap2-map-ont", "minimap2-lr:hqae", "winnowmap", "graphaligner", "giraffe-k31.w50.W-r10-default-noflags"]
        - refgraph: "hprc-v1.1-mc-sampled-HG002-r10"
          mapper: "giraffe-k31.w50-r10-default-noflags"
        - refgraph: "primary"
          mapper: "giraffe-k31.w50.W-r10-default-noflags"

  #This is used to test different mappers on hifi reads
  #Add vg versions with `-commit` instead of `-default`, and make sure the binary
  # is called `vg_commit`
  hifi_test:
    control:
      subset: 1m
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
    vary:
      realness: ["sim", "real"]
      mapper: ["minimap2-map-pb", "minimap2-map-hifi", "minimap2-lr:hqae", "winnowmap", "graphaligner", "giraffe-k31.w50.W-hifi-default-noflags", "giraffe-k31.w50-hifi-default-noflags"]
      refgraph: ["hprc-v1.1-mc", "hprc-v1.1-mc-sampled-HG002-hifi", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc"
          mapper: ["minimap2-map-pb", "minimap2-map-hifi", "minimap2-lr:hqae", "winnowmap", "graphaligner", "giraffe-k31.w50.W-hifi-default-noflags"]
        - refgraph: "hprc-v1.1-mc-sampled-HG002-hifi"          
          mapper: "giraffe-k31.w50-hifi-default-noflags"
        - refgraph: "primary"          
          mapper: "giraffe-k31.w50.W-hifi-default-noflags"

  hifi_speed:
    control:
      subset: 10k
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
      refgraph: hprc-v1.1-mc
    vary:
      mapper: ["giraffe-k31.w50.W-hifi-default-noflags", "giraffe-k31.w50.W-hifi-370f8f-noflags"]

  hifi_sim_present:
    control:
      subset: 1m
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
      refgraph: hprc-v1.1-mc
    vary:
      mapper: ["giraffe-k31.w50.W-hifi-default-noflags", "minimap2-lr:hq", "winnowmap", "graphaligner"]

  r10_sim_present:
    control:
      subset: 1m
      tech: r10
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: sim
      refgraph: hprc-v1.1-mc
    vary:
      mapper: ["giraffe-k31.w50.W-r10-default-noflags", "minimap2-map-ont", "winnowmap", "graphaligner"]

  hifi_real_present:
    control:
      subset: 1m
      tech: hifi
      reference: chm13
      trimmedness: ""
      sample: HG002
      realness: real
      refgraph: hprc-v1.1-mc
    vary:
      mapper: ["giraffe-k31.w50.W-hifi-default-noflags", "minimap2-lr:hq"]

  r10_real_present:
    control:
      subset: 1m
      tech: r10
      reference: chm13
      trimmedness: ".trimmed"
      sample: HG002
      realness: real
      refgraph: hprc-v1.1-mc
    vary:
      mapper: ["giraffe-k31.w50.W-r10-default-noflags", "minimap2-map-ont"]


  # Compare different nanopore data types
  compare_nanopore:
    control:
      subset: 1m
      reference: chm13
      refgraph: "hprc-v1.1-mc"
      sample: HG002
    vary:
      realness: ["sim", "real"]
      trimmedness: ["", ".trimmed"]
      tech: ["r10", "r9"]
      mapper: ["minimap2-lr:hqae", "giraffe-k31.w50.W-r10-default-noflags"]
    constrain:
        # Always trimming for real reads
        - realness: real
          trimmedness: ".trimmed"
        # Always use no trimming after simulation for simulated reads
        - realness: sim
          trimmedness: ""

  # This experiment compares different ways of mapping Illumina reads
  illumina_test:
    control:
      subset: 1m
      reference: chm13
      refgraph: "hprc-v1.1-mc"
      tech: illumina
      trimmedness: ""
      sample: HG002
    vary:
      realness: ["sim", "real"]
      mapper: ["giraffe-k29.w11.W-sr-default-noflags", "giraffe-k29.w11.W-default-default-noflags", "giraffe-k29.w11-sr-default-noflags", "giraffe-k29.w11-default-default-noflags"]
      refgraph: ["hprc-v1.1-mc", "hprc-v1.1-mc-sampled-HG002-illumina", "primary"]
    constrain:
        - refgraph: "hprc-v1.1-mc"
          mapper: ["giraffe-k29.w11.W-sr-default-noflags", "giraffe-k29.w11.W-default-default-noflags"]
        - refgraph: "hprc-v1.1-mc-sampled-HG002-illumina"
          mapper: ["giraffe-k29.w11-sr-default-noflags", "giraffe-k29.w11-default-default-noflags"]
        - refgraph: "primary"          
          mapper: ["giraffe-k29.w11.W-sr-default-noflags", "giraffe-k29.w11.W-default-default-noflags"]
  illumina_test_small:
    control:
      realness: sim
      subset: 1k
      reference: chm13
      refgraph: "hprc-v1.1-mc"
      tech: illumina
      trimmedness: ""
      sample: HG002
    vary:
      mapper: ["giraffe-k29.w11.W-sr-default-noflags", "giraffe-k29.w11.W-default-default-noflags", "minimap2"]
